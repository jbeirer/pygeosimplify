{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to pyGeoSimplify!</p>"},{"location":"#download-pygeosimplify","title":"Download pyGeoSimplify","text":"<pre><code>pip install pygeosimplify\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>import pygeosimplify as pgs\nfrom pygeosimplify.simplify.layer import GeoLayer\nfrom pygeosimplify.simplify.detector import SimplifiedDetector\n\n# Set names of branches that specify coordinate system of cells\npgs.set_coordinate_branch(\"XYZ\", \"isXYZ\")\npgs.set_coordinate_branch(\"EtaPhiR\", \"isEtaPhiR\")\npgs.set_coordinate_branch(\"EtaPhiZ\", \"isEtaPhiZ\")\npgs.set_coordinate_branch(\"RPhiZ\", \"isRPhiZ\")\n\n# Load geometry\ngeo = pgs.load_geometry(\"DetectorCells.root\", tree_name='treeName')\n\n# Create simplified detector\ndetector = SimplifiedDetector()\n\n# Add dector layers to detector\nn_layer = max(geo.layer) + 1\nfor i_layer in range(0, n_layer):\n    layer = GeoLayer(geo, layer_idx = i_layer, thinned_layer_width = 1)\n    detector.add_layer(layer)\n\n# Process detector\ndetector.process()\n\n# Save simplified detector to gdml file\ndetector.save_to_gdml(cyl_type='processed', output_path='processed.gdml')\n</code></pre>"},{"location":"#license","title":"LICENSE","text":"<p>pyGeoSimplify is free of use and open-source. All versions are published under the MIT License.</p>"},{"location":"modules/","title":"Modules","text":""}]}